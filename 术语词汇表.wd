英文术语词汇表（Glossary of Terms）

| **术语**                | **定义**                                                    |
| --------------------- | --------------------------------------------------------- |
| **Repository (Repo)** | 一个存储代码和文件的地方，可以是本地的或远程的。                                  |
| **Fork**              | 创建一个仓库的副本到你的 GitHub 账户中，用于独立开发。                           |
| **Clone**             | 将远程仓库的代码复制到本地计算机。                                         |
| **Branch**            | 一个独立的开发线，用于开发新功能或修复问题，不影响主分支。                             |
| **Main Branch**       | 项目的主分支，通常是 `main` 或 `master`，包含稳定代码。                      |
| **Commit**            | 保存代码更改的快照，记录了代码的当前状态。                                     |
| **Push**              | 将本地更改上传到远程仓库。                                             |
| **Pull Request (PR)** | 提交更改到远程仓库的请求，等待审查和合并。                                     |
| **Merge**             | 将一个分支的更改合并到另一个分支。                                         |
| **Conflict**          | 当两个分支对同一代码段有不同更改时，需要手动解决的冲突。                              |
| **Issue**             | 在 GitHub 上报告的错误、功能请求或讨论主题。                                |
| **Pull**              | 从远程仓库获取最新的更改并更新本地仓库。                                      |
| **Upstream**          | 原始仓库，通常用于同步 Fork 的仓库。                                     |
| **CI/CD**             | Continuous Integration / Continuous Deployment，持续集成和持续部署。 |
| **Unit Test**         | 单元测试，用于测试代码中单个组件的功能。                                      |
| **Integration Test**  | 集成测试，用于测试多个组件之间的交互。                                       |
| **Code Review**       | 团队成员对代码进行审查，确保代码质量。                                       |
| **Feature Branch**    | 用于开发新功能的分支。                                               |
| **Hotfix Branch**     | 用于紧急修复的分支。                                                |
| **Tag**               | 用于标记代码的特定版本，通常用于发布。                                       |
| **Remote**            | 远程仓库的地址，用于推送和拉取代码。                                        |
| **Staging**           | 部署代码到测试环境，用于最终测试。                                         |
| **Production**        | 部署代码到生产环境，用户实际使用的环境。                                      |
